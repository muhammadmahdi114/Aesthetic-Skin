[{"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\index.js":"1","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\App.js":"2","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\imageInput.jsx":"3","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Recommendations.jsx":"4","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Form.jsx":"5","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\controllers\\actions.js":"6","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Components\\webCam.jsx":"7","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Components\\ProductCard.jsx":"8","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\index.js":"9","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\App.js":"10","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Recommendations.jsx":"11","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Form.jsx":"12","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\imageInput.jsx":"13","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\controllers\\actions.js":"14","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Components\\webCam.jsx":"15","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Components\\ProductCard.jsx":"16"},{"size":442,"mtime":1718144301425,"results":"17","hashOfConfig":"18"},{"size":661,"mtime":1718143214526,"results":"19","hashOfConfig":"18"},{"size":2294,"mtime":1705870916694,"results":"20","hashOfConfig":"18"},{"size":5542,"mtime":1718143271180,"results":"21","hashOfConfig":"18"},{"size":8722,"mtime":1718143337403,"results":"22","hashOfConfig":"18"},{"size":1145,"mtime":1705825867376,"results":"23","hashOfConfig":"18"},{"size":5233,"mtime":1718143826376,"results":"24","hashOfConfig":"18"},{"size":2344,"mtime":1705825867798,"results":"25","hashOfConfig":"18"},{"size":441,"mtime":1705825867221,"results":"26","hashOfConfig":"27"},{"size":685,"mtime":1705825867141,"results":"28","hashOfConfig":"27"},{"size":5569,"mtime":1706023047968,"results":"29","hashOfConfig":"27"},{"size":8729,"mtime":1705832636154,"results":"30","hashOfConfig":"27"},{"size":2294,"mtime":1705870916694,"results":"31","hashOfConfig":"27"},{"size":1145,"mtime":1705825867376,"results":"32","hashOfConfig":"27"},{"size":5220,"mtime":1705832510297,"results":"33","hashOfConfig":"27"},{"size":2344,"mtime":1705825867798,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w7kko4",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1d5n06v",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"56"},"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\index.js",[],"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\App.js",[],"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\imageInput.jsx",[],["75","76"],"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Recommendations.jsx",["77"],"import React from 'react';\n\n// MUI\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport Typography from '@mui/material/Typography';\n\nimport ProductCard from './Components/ProductCard'\nimport { useLocation } from 'react-router';\n\n// {'face-moisturisers': [{'brand': 'azani active care',\n//    'name': 'unisex acne rescue cream - 30 ml',\n//    'price': 'â‚¹ 399',\n//    'url': 'https://www.myntra.com/face-moisturisers/azani-active-care/azani-active-care-unisex-acne-rescue-cream---30-ml/15322518/buy',\n//    'skin type': 'all',\n//    'concern': ['deep nourishment', 'acne', 'blemishes', 'dull skin']},\n\nconst Products = {\n\n    skinCare:\n    {\n        'face-moisturisers':\n            [{\n                'brand': 'azani active care',\n                'name': 'unisex acne rescue cream - 30 ml',\n                'price': 'Rs.Rs. 399',\n                'url': 'https://www.myntra.com/face-moisturisers/azani-active-care/azani-active-care-unisex-acne-rescue-cream---30-ml/15322518/buy',\n                'skin type': 'all',\n                'concern': ['deep nourishment', 'acne', 'blemishes', 'dull skin']\n            },\n            {\n                'brand': 'mamaearth',\n                'name': 'vitamin c face milk with peach for skin illumination 100 ml',\n                'price': 'Rs. 404',\n                'url': 'https://www.myntra.com/face-moisturisers/mamaearth/mamaearth-vitamin-c-face-milk-with-peach-for-skin-illumination-100-ml/12411986/buy',\n                'skin type': 'all',\n                'concern': ['acne', 'blemishes', 'pigmentation', 'dull skin']\n            }]\n    },\n    makeUp:\n    {\n        'foundations':\n            [{\n                'brand': 'wet n wild',\n                'name': 'sustainable photo focus matte face primer - partners in prime',\n                'price': 'Rs. 454',\n                'url': 'https://www.myntra.com/foundation-and-primer/wet-n-wild/wet-n-wild-sustainable-photo-focus-matte-face-primer---partners-in-prime/12045988/buy',\n                'skin type': 'normal',\n                'skin tone': 'light to medium'\n            },\n            {\n                'brand': 'faces canada',\n                'name': 'ultime pro makeup fixer',\n                'price': 'Rs. 486',\n                'url': 'https://www.myntra.com/foundation-and-primer/faces-canada/faces-canada-ultime-pro-makeup-fixer/2421530/buy',\n                'skin type': 'normal',\n                'skin tone': 'light to medium'\n            }]\n    }\n}\n\n\nconst Recommendations = () => {\n    const handleLogoClick = () => {\n        window.location.href = 'http://localhost:3000/'\n    };\n    const { state } = useLocation();\n    const { data } = state;\n    const { general, makeup } = data;\n    return <>\n        <Container sx={{ marginTop: \"2vh\", padding: 1 }} alignitems=\"center\" width=\"inherit\">\n            <Typography gutterBottom variant=\"h3\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n                <img\n                    src='/logo.png'\n                    alt='Logo'\n                    style={{ width: \"150px\", height: \"150px\", position: \"absolute\", top: \"0\", left: \"0\" }}\n                    onClick={handleLogoClick}\n                />\n                <Grid>\n                    Products Recommendation\n                </Grid>\n\n            </Typography>\n            <Typography gutterBottom variant=\"h5\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n                Skin care\n            </Typography>\n            {Object.keys(general).map((type, products) => {\n                return (<div><Typography gutterBottom variant=\"h5\" component=\"div\" marginTop=\"2vh\" color=\"text.secondary\">\n                    {type}\n                </Typography>\n                    <Grid container spacing={1}>\n                        {general[type].slice(0, 4).map((prod) => {\n                            return <Grid item xs={6} md={3}>\n                                <ProductCard\n                                    name={prod.name}\n                                    brand={prod.brand}\n                                    image={prod.img}\n                                    price={prod.price}\n                                    url={prod.url}\n                                    concern={prod.concern} />\n                            </Grid>\n                        })}\n                    </Grid></div>)\n            })}\n\n            <Typography gutterBottom variant=\"h5\" component=\"div\" marginTop=\"6vh\" textAlign=\"center\">\n                Make up\n            </Typography>\n\n            <FormLabel component=\"legend\">{ }</FormLabel>\n            {/* {Object.keys(Products.makeUp).map((type, products)=>{\n            return (<div><FormLabel component=\"legend\">{type}</FormLabel><Grid container spacing={1}> */}\n            <div>\n                <Grid container spacing={1}>\n                    {makeup.map((prod) => {\n                        return <Grid item xs={6} md={3}>\n                            <ProductCard\n                                name={prod.name}\n                                brand={prod.brand}\n                                image={prod.img}\n                                price={prod.price}\n                                url={prod.url}\n                                concern={prod.concern} />\n                        </Grid>\n                    })}\n                </Grid></div>\n            {/* </Grid></div>) */}\n            {/* // })} */}\n        </Container>\n    </>\n};\n\nexport default Recommendations;","E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Form.jsx",[],"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\controllers\\actions.js",[],"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Components\\webCam.jsx",[],"E:\\GitHub\\Aesthetic-Skin\\AI-Rec\\frontend\\src\\views\\Components\\ProductCard.jsx",["78","79","80"],"import React,{ useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nconst unavailableImage = process.env.PUBLIC_URL+'./unavailable.png'\n\nexport default function ProductCard({name=\"cream\", price=2000, brand=\"brand\", url=\"https://www.myntra.com/\", concern=[], image = ''}) {\n    const redirectProduct = () => {\n        window.location.replace(url);\n    }\n    concern = [...new Set(concern)]\n    return (  \n        <Box onClick={redirectProduct} sx={{lineHeight:\"low\"}}>\n            <Card sx={{ maxWidth: \"50vw\" }}>\n            <CardMedia\n                component=\"img\"\n                height=\"200vh\"\n                image={image}\n                alt=\"Product image\"\n                />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                    {brand}\n                    <Typography component=\"div\" color=\"text.primary\" variant=\"inline\" sx={{float: \"right\", fontWeight:\"bold\"}}>\n                        {price}\n                    </Typography>\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\n                {name.length > 40 ? name.substring(0, 40)+\"...\" : name}\n                </Typography>\n                <Grid container>\n                    {concern.filter(n => n).map((concern) => {\n                        return <Grid item xs={12}><Typography \n                                    variant=\"body2\" \n                                    color=\"white\" \n                                    variant=\"inline\" \n                                    backgroundColor=\"info.main\"\n                                    borderRadius=\"5%\"\n                                    paddingLeft=\"2%\"\n                                    paddingRight=\"2%\"\n                                    paddingTop=\"1%\"\n                                    paddingBottom=\"1%\"\n                                    marginRight=\"2%\"\n                                    >{concern}</Typography></Grid>\n                    })}\n                </Grid>\n            </CardContent>\n            </Card>\n        </Box>\n    );\n}","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\index.js",[],["81","82"],"E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\App.js",["83"],"import React from \"react\";\nimport './App.css'\nimport {\n  BrowserRouter as Router,\n  Routes as Switch,\n  Route,\n  useHistory  \n} from \"react-router-dom\";\n\nimport ImageInput from \"./views/imageInput\";\nimport Recommendations from './views/Recommendations'\nimport Form from \"./views/Form\";\n\n// MUI\nimport CssBaseline from '@mui/material/CssBaseline';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Router>\n      \n        <Switch>\n          <Route path=\"/\" element={<ImageInput />} />\n          <Route path=\"/form\" element={<Form />} />\n          <Route path=\"/recs\" element={<Recommendations />} />\n        </Switch>\n\n      </Router>\n    </>\n\n  );\n}\n\nexport default App;\n","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Recommendations.jsx",["84","85","86"],"import React, { useState, useEffect } from 'react';\n\n// MUI\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport Typography from '@mui/material/Typography';\n\nimport ProductCard from './Components/ProductCard'\nimport { useLocation } from 'react-router';\n\n\n\n// {'face-moisturisers': [{'brand': 'azani active care',\n//    'name': 'unisex acne rescue cream - 30 ml',\n//    'price': 'â‚¹ 399',\n//    'url': 'https://www.myntra.com/face-moisturisers/azani-active-care/azani-active-care-unisex-acne-rescue-cream---30-ml/15322518/buy',\n//    'skin type': 'all',\n//    'concern': ['deep nourishment', 'acne', 'blemishes', 'dull skin']},\n\nconst Products = {\n\n    skinCare:\n    {\n        'face-moisturisers':\n            [{\n                'brand': 'azani active care',\n                'name': 'unisex acne rescue cream - 30 ml',\n                'price': 'Rs.Rs. 399',\n                'url': 'https://www.myntra.com/face-moisturisers/azani-active-care/azani-active-care-unisex-acne-rescue-cream---30-ml/15322518/buy',\n                'skin type': 'all',\n                'concern': ['deep nourishment', 'acne', 'blemishes', 'dull skin']\n            },\n            {\n                'brand': 'mamaearth',\n                'name': 'vitamin c face milk with peach for skin illumination 100 ml',\n                'price': 'Rs. 404',\n                'url': 'https://www.myntra.com/face-moisturisers/mamaearth/mamaearth-vitamin-c-face-milk-with-peach-for-skin-illumination-100-ml/12411986/buy',\n                'skin type': 'all',\n                'concern': ['acne', 'blemishes', 'pigmentation', 'dull skin']\n            }]\n    },\n    makeUp:\n    {\n        'foundations':\n            [{\n                'brand': 'wet n wild',\n                'name': 'sustainable photo focus matte face primer - partners in prime',\n                'price': 'Rs. 454',\n                'url': 'https://www.myntra.com/foundation-and-primer/wet-n-wild/wet-n-wild-sustainable-photo-focus-matte-face-primer---partners-in-prime/12045988/buy',\n                'skin type': 'normal',\n                'skin tone': 'light to medium'\n            },\n            {\n                'brand': 'faces canada',\n                'name': 'ultime pro makeup fixer',\n                'price': 'Rs. 486',\n                'url': 'https://www.myntra.com/foundation-and-primer/faces-canada/faces-canada-ultime-pro-makeup-fixer/2421530/buy',\n                'skin type': 'normal',\n                'skin tone': 'light to medium'\n            }]\n    }\n}\n\n\nconst Recommendations = () => {\n    const handleLogoClick = () => {\n        window.location.href = 'http://localhost:3000/'\n    };\n    const { state } = useLocation();\n    const { data } = state;\n    const { general, makeup } = data;\n    return <>\n        <Container sx={{ marginTop: \"2vh\", padding: 1 }} alignitems=\"center\" width=\"inherit\">\n            <Typography gutterBottom variant=\"h3\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n                <img\n                    src='/logo.png'\n                    alt='Logo'\n                    style={{ width: \"150px\", height: \"150px\", position: \"absolute\", top: \"0\", left: \"0\" }}\n                    onClick={handleLogoClick}\n                />\n                <Grid>\n                    Products Recommendation\n                </Grid>\n\n            </Typography>\n            <Typography gutterBottom variant=\"h5\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n                Skin care\n            </Typography>\n            {Object.keys(general).map((type, products) => {\n                return (<div><Typography gutterBottom variant=\"h5\" component=\"div\" marginTop=\"2vh\" color=\"text.secondary\">\n                    {type}\n                </Typography>\n                    <Grid container spacing={1}>\n                        {general[type].slice(0, 4).map((prod) => {\n                            return <Grid item xs={6} md={3}>\n                                <ProductCard\n                                    name={prod.name}\n                                    brand={prod.brand}\n                                    image={prod.img}\n                                    price={prod.price}\n                                    url={prod.url}\n                                    concern={prod.concern} />\n                            </Grid>\n                        })}\n                    </Grid></div>)\n            })}\n\n            <Typography gutterBottom variant=\"h5\" component=\"div\" marginTop=\"6vh\" textAlign=\"center\">\n                Make up\n            </Typography>\n\n            <FormLabel component=\"legend\">{ }</FormLabel>\n            {/* {Object.keys(Products.makeUp).map((type, products)=>{\n            return (<div><FormLabel component=\"legend\">{type}</FormLabel><Grid container spacing={1}> */}\n            <div>\n                <Grid container spacing={1}>\n                    {makeup.map((prod) => {\n                        return <Grid item xs={6} md={3}>\n                            <ProductCard\n                                name={prod.name}\n                                brand={prod.brand}\n                                image={prod.img}\n                                price={prod.price}\n                                url={prod.url}\n                                concern={prod.concern} />\n                        </Grid>\n                    })}\n                </Grid></div>\n            {/* </Grid></div>) */}\n            {/* // })} */}\n        </Container>\n    </>\n};\n\nexport default Recommendations;","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Form.jsx",["87","88"],"import React, { useState, useRef} from \"react\";\nimport {useNavigate} from 'react-router-dom';\n\n// MUI\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\n// controllers\nimport { putForm } from '../controllers/actions'\nimport { useLocation } from 'react-router';\n\nconst skinToneValues = [1, 2, 3, 4, 5, 6]\nconst skinToneColors = [\"rgb(249, 245, 236)\",\n    \"rgb(250, 245, 234)\",\n    \"rgb(240, 227, 171)\",\n    \"rgb(206, 172, 104)\",\n    \"rgb(105, 59, 41)\",\n    \"rgb(33, 28, 40)\",\n]\nlet data = {\n    tone: 5,\n    type: \"Oily\",\n    acne: \"Moderate\"\n}\nconst skinTypes = [\"All\", \"Oily\", \"Normal\", \"Dry\"]\nconst acnes = ['Low', 'Moderate', 'Severe']\nconst otherConcerns = ['sensitive', 'fine lines', 'wrinkles', 'redness', 'pore', 'pigmentation', 'blackheads', 'whiteheads', 'blemishes', 'dark circles', 'eye bags', 'dark spots']\n\nconst Form = () => {\n    \n    const {state} = useLocation();\n    if(state !== null) {\n        data = state.data; \n        console.log(data)\n    }\n    console.log(\"After the condtional : \", data)\n    const {type, tone, acne} = data;\n    console.log(\"Prefill : \", type, tone, acne)\n\n    const [currType, setCurrType] = useState(type)\n    const [currTone, setCurrTone] = useState(parseInt(tone))\n    const [currAcne, setAcne] = useState(acne)\n    const [features, setFeatures] = useState({\n        \"normal\": false, \"dry\": false, \"oily\": false, \"combination\": false,\n        \"acne\": false, \"sensitive\": false, \"fine lines\": false, \"wrinkles\": false,\n        \"redness\": false, \"dull\": false, \"pore\": false, \"pigmentation\": false,\n        \"blackheads\": false, \"whiteheads\": false, \"blemishes\": false, \"dark circles\": false,\n        \"eye bags\": false, \"dark spots\": false\n    });\n    const handleChange = (event) => {\n        setFeatures({\n            ...features,\n            [event.target.name]: event.target.checked,\n        });\n        console.log(features)\n    };\n    const handleTone = (e) => {\n        setCurrTone(e.target.value)\n    }\n\n    const handleType = (e) => {\n        setCurrType(e.target.value)\n    }\n\n    const handleAcne = (e) => {\n        setAcne(e.target.value)\n    }\n    const navigate = useNavigate()\n    const handleSubmit = () => {\n        if (currType === 'All') {\n            features['normal'] = true;\n            features['dry'] = true;\n            features['oily'] = true;\n            features['combination'] = true;\n\n        }\n        else {\n            features[currType.toLowerCase()] = true;\n        }\n        if (currAcne != \"Low\") {\n            features['acne'] = true;\n        }\n        for (const [key, value] of Object.entries(features)) {\n            if (value === true) {\n                features[key] = 1;\n            }\n            else {\n                features[key] = 0;\n            }\n        }\n        console.log({\"features\": features, \"type\":currType, \"tone\":currTone})\n        putForm(features, currType, currTone, navigate)\n    }\n\n    return (\n        <>\n            <Container maxWidth=\"xs\" sx={{ marginTop: \"2vh\" }} alignitems=\"center\" width=\"inherit\">\n                <Typography variant=\"h5\" component=\"div\" textAlign=\"center\">\n                    Results\n                </Typography>\n                {/* \n            <FormControl fullWidth>\n            </FormControl> */}\n\n                <FormControl component=\"fieldset\" sx={{ marginTop: \"3vh\" }}>\n                    <Grid container>\n                        <Grid item xs={9}>\n                            <InputLabel id=\"demo-simple-select-label\">Tone</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={currTone}\n                                label=\"Age\"\n                                onChange={handleTone}\n                                fullWidth\n                                defaultValue={tone}>\n                                {skinToneValues.map((value) => {\n                                    return (<MenuItem value={value}>{value}</MenuItem>)\n                                })}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <div\n                                style={{\n                                    height: \"3rem\",\n                                    width: \"3rem\",\n                                    backgroundColor: skinToneColors[tone-1],\n                                    margin: \"0 auto\",\n                                    justifySelf: \"center\",\n                                    borderRadius: \"10%\",\n                                }}></div>\n                        </Grid>\n                    </Grid>\n                    <Grid marginTop=\"2vh\">\n                        <FormLabel component=\"legend\">Type</FormLabel>\n                        <RadioGroup\n                            row\n                            name=\"row-radio-buttons-group\"\n                            defaultValue={type}\n                            onChange={handleType}\n                            value={currType}>\n                            <Grid container>\n                                {skinTypes.map((type) => {\n                                    return (\n                                        <Grid item xs={6}>\n                                            <FormControlLabel\n                                                value={type}\n                                                control={<Radio />}\n                                                label={type} />\n                                        </Grid>)\n                                })}\n                            </Grid>\n                        </RadioGroup>\n                    </Grid>\n\n                    <Grid marginTop=\"2vh\">\n                        <FormLabel component=\"legend\">Acne</FormLabel>\n                        <RadioGroup\n                            row\n                            name=\"row-radio-buttons-group\"\n                            onChange={handleAcne}\n                            defaultValue={acne}\n                            value={currAcne}>\n\n                            <Grid container>\n                                {acnes.map((ac) => {\n                                    return (\n                                        <Grid item >\n                                            <FormControlLabel\n                                                value={ac}\n                                                control={<Radio />}\n                                                label={ac} />\n                                        </Grid>)\n                                })}\n                            </Grid>\n                        </RadioGroup>\n                    </Grid>\n\n                    <Grid marginTop=\"2vh\">\n                        {/* <Typography variant=\"h6\" component=\"div\" textAlign=\"center\">\n                    Specify other skin concerns\n            </Typography> */}\n                        <FormLabel component=\"legend\">Specify other Skin concerns</FormLabel>\n                        <Grid container>\n                            {otherConcerns.map((concern) => {\n                                return (\n                                    <Grid item xs={6}>\n                                        <FormControlLabel control={<Checkbox checked={features[concern]} onChange={handleChange} name={concern} />}\n                                            value={concern}\n                                            label={concern.charAt(0).toUpperCase() + concern.slice(1)} />\n                                    </Grid>)\n                            })}\n                        </Grid>\n                    </Grid>\n\n                    <Grid marginTop=\"2vh\" item xs={12}>\n                        <Button\n                            onClick={handleSubmit}\n                            variant=\"contained\"\n                            fullWidth>\n                            Submit\n                        </Button>\n                    </Grid>\n                </FormControl>\n            </Container>\n        </>\n    )\n}\n\n\n\n\nexport default Form;\n","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\imageInput.jsx",[],"E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\controllers\\actions.js",[],"E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Components\\webCam.jsx",["89"],"import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from 'face-api.js';\n\n// MUI\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst aspectRatio = 4 / 3;\nconst thresholdPercentFace = 0.3;\nconst thresholdFaceScore = 0.7;\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nconst WebcamCapture = ({ setImageSrc, setOnPlay, onPlay }) => {\n    let camHeight = useWindowDimensions().height\n    let camWidth = useWindowDimensions().width\n    if (camHeight > camWidth) {\n        camHeight = Math.round(camWidth * aspectRatio)\n    } else {\n        camHeight = Math.round(camHeight * 0.9)\n        camWidth = Math.round(camHeight / aspectRatio)\n    }\n    const videoConstraints = {\n        height: camHeight,\n        width: camWidth,\n        facingMode: \"user\"\n    };\n\n    // useEffect( () =>\n    //     {\n    //         console.log(videoConstraints.height)\n    //         console.log(videoConstraints.width)\n    //     }, [videoConstraints.height, videoConstraints.width]\n    // )\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            console.log(imageSrc)\n            setImageSrc(imageSrc)\n        }, [webcamRef]\n    );\n\n    const [initialising, setInitialising] = useState(false)\n    useEffect(() => {\n        const loadModels = async () => {\n            const MODEL_URI = process.env.PUBLIC_URL + '/models';\n            setInitialising(true)\n            Promise.all([\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URI),\n            ]).then(() => { console.log(\"models imported\") });\n        }\n        loadModels();\n    }, [])\n\n\n\n    const [faceOK, setFaceOK] = useState(null)\n    const handleVideoOnPlay = () => {\n        setInterval(async () => {\n            if (initialising) {\n                setInitialising(false)\n            }\n            let detections = []\n            if (webcamRef.current !== null)\n                detections = await faceapi.detectAllFaces(webcamRef.current.video, new faceapi.TinyFaceDetectorOptions());\n            if (detections.length > 1) {\n                // Multiple faces\n                setFaceOK(\"Multiple faces detected\")\n            }\n            else if (detections[0] !== undefined) {\n                // One face\n                const boxArea = Math.round(detections[0].box.height) * Math.round(detections[0].box.width)\n                const ImageArea = detections[0].imageWidth * detections[0].imageHeight\n                const percentFace = boxArea / ImageArea\n\n                if (percentFace < thresholdPercentFace) {\n                    // Not close enough\n                    setFaceOK(\"Come closer\")\n                } else if (detections[0].score < thresholdFaceScore) {\n                    // detected face score is low\n                    setFaceOK(\"Blurry or Not enough lighting\")\n                } else {\n                    // all conditions satisfied\n                    setFaceOK(\"OK\")\n                }\n            }\n            else {\n                // No face\n                setFaceOK(\"no face detected\")\n            }\n        }, 500)\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" alignItems=\"center\" marginTop={1} spacing={1}>\n                <Grid item>\n                    <Typography variant=\"h5\" component=\"div\" textAlign=\"center\">\n                        {initialising ? \"Starting Up...\" : faceOK}\n                    </Typography>\n                    <Webcam\n                        id=\"webcam\"\n                        audio={false}\n                        height={videoConstraints.height - 40}\n                        width={videoConstraints.width}\n                        ref={webcamRef}\n                        screenshotFormat=\"image/jpeg\"\n                        videoConstraints={videoConstraints}\n                        onUserMedia={handleVideoOnPlay}\n                    />\n                </Grid>\n                <Grid item>\n                    <Button\n                        onClick={capture}\n                        variant=\"contained\"\n                        disabled={initialising || faceOK !== \"OK\"}\n                    >\n                        Capture Photo\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n\n    );\n};\n\nexport default WebcamCapture","E:\\GitHub\\Aesthetic-Skin\\AI-REC\\frontend\\src\\views\\Components\\ProductCard.jsx",["90","91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":19,"column":7,"nodeType":"99","messageId":"100","endLine":19,"endColumn":15},{"ruleId":"97","severity":1,"message":"101","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},{"ruleId":"97","severity":1,"message":"102","line":9,"column":7,"nodeType":"99","messageId":"100","endLine":9,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":40,"column":37,"nodeType":"105","messageId":"106","endLine":40,"endColumn":53},{"ruleId":"93","replacedBy":"107"},{"ruleId":"95","replacedBy":"108"},{"ruleId":"97","severity":1,"message":"109","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"101","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"110","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":21,"column":7,"nodeType":"99","messageId":"100","endLine":21,"endColumn":15},{"ruleId":"97","severity":1,"message":"111","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":91,"column":22,"nodeType":"114","messageId":"115","endLine":91,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":63,"column":12,"nodeType":"118","endLine":63,"endColumn":23,"suggestions":"119"},{"ruleId":"97","severity":1,"message":"101","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},{"ruleId":"97","severity":1,"message":"102","line":9,"column":7,"nodeType":"99","messageId":"100","endLine":9,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":40,"column":37,"nodeType":"105","messageId":"106","endLine":40,"endColumn":53},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Products' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'unavailableImage' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["120"],["121"],"'useHistory' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setImageSrc'. Either include it or remove the dependency array. If 'setImageSrc' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [setImageSrc]",{"range":"125","text":"126"},[1877,1888],"[setImageSrc]"]