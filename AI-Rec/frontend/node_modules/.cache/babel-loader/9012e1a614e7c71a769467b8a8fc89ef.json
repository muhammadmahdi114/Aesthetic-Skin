{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\Aesthetic-Skin\\\\AI-Rec\\\\frontend\\\\src\\\\views\\\\Components\\\\webCam.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from 'face-api.js'; // MUI\n\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\n\nconst aspectRatio = 4 / 3;\nconst thresholdPercentFace = 0.3;\nconst thresholdFaceScore = 0.7;\n\nfunction useWindowDimensions() {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nconst WebcamCapture = _ref => {\n  _s2();\n\n  let {\n    setImageSrc,\n    setOnPlay,\n    onPlay\n  } = _ref;\n  let camHeight = useWindowDimensions().height;\n  let camWidth = useWindowDimensions().width;\n\n  if (camHeight > camWidth) {\n    camHeight = Math.round(camWidth * aspectRatio);\n  } else {\n    camHeight = Math.round(camHeight * 0.9);\n    camWidth = Math.round(camHeight / aspectRatio);\n  }\n\n  const videoConstraints = {\n    height: camHeight,\n    width: camWidth,\n    facingMode: \"user\"\n  }; // useEffect( () =>\n  //     {\n  //         console.log(videoConstraints.height)\n  //         console.log(videoConstraints.width)\n  //     }, [videoConstraints.height, videoConstraints.width]\n  // )\n\n  const webcamRef = useRef(null);\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    console.log(imageSrc);\n    setImageSrc(imageSrc);\n  }, [webcamRef, setImageSrc]);\n  asdas;\n  const [initialising, setInitialising] = useState(false);\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URI = process.env.PUBLIC_URL + '/models';\n      setInitialising(true);\n      Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URI) // faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URI),\n      // faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URI),\n      // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URI),\n      ]).then(() => {\n        console.log(\"models imported\");\n      });\n    };\n\n    loadModels();\n  }, []);\n  const [faceOK, setFaceOK] = useState(null);\n\n  const handleVideoOnPlay = () => {\n    setInterval(async () => {\n      if (initialising) {\n        setInitialising(false);\n      }\n\n      let detections = [];\n      if (webcamRef.current !== null) detections = await faceapi.detectAllFaces(webcamRef.current.video, new faceapi.TinyFaceDetectorOptions());\n\n      if (detections.length > 1) {\n        // Multiple faces\n        setFaceOK(\"Multiple faces detected\");\n      } else if (detections[0] !== undefined) {\n        // One face\n        const boxArea = Math.round(detections[0].box.height) * Math.round(detections[0].box.width);\n        const ImageArea = detections[0].imageWidth * detections[0].imageHeight;\n        const percentFace = boxArea / ImageArea;\n\n        if (percentFace < thresholdPercentFace) {\n          // Not close enough\n          setFaceOK(\"Come closer\");\n        } else if (detections[0].score < thresholdFaceScore) {\n          // detected face score is low\n          setFaceOK(\"Blurry or Not enough lighting\");\n        } else {\n          // all conditions satisfied\n          setFaceOK(\"OK\");\n        }\n      } else {\n        // No face\n        setFaceOK(\"no face detected\");\n      }\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      marginTop: 1,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          textAlign: \"center\",\n          children: initialising ? \"Starting Up...\" : faceOK\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n          id: \"webcam\",\n          audio: false,\n          height: videoConstraints.height - 40,\n          width: videoConstraints.width,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          videoConstraints: videoConstraints,\n          onUserMedia: handleVideoOnPlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: capture,\n          variant: \"contained\",\n          disabled: initialising || faceOK !== \"OK\",\n          children: \"Capture Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(WebcamCapture, \"9yapt0NgFoJS22iDVX2NZwthnY4=\", false, function () {\n  return [useWindowDimensions, useWindowDimensions];\n});\n\n_c = WebcamCapture;\nexport default WebcamCapture;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"sources":["E:/GitHub/Aesthetic-Skin/AI-Rec/frontend/src/views/Components/webCam.jsx"],"names":["React","useRef","useCallback","useState","useEffect","Webcam","faceapi","Button","Grid","Typography","getWindowDimensions","innerWidth","width","innerHeight","height","window","aspectRatio","thresholdPercentFace","thresholdFaceScore","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","WebcamCapture","setImageSrc","setOnPlay","onPlay","camHeight","camWidth","Math","round","videoConstraints","facingMode","webcamRef","capture","imageSrc","current","getScreenshot","console","log","asdas","initialising","setInitialising","loadModels","MODEL_URI","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","then","faceOK","setFaceOK","handleVideoOnPlay","setInterval","detections","detectAllFaces","video","TinyFaceDetectorOptions","length","undefined","boxArea","box","ImageArea","imageWidth","imageHeight","percentFace","score"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from 'face-api.js';\n\n// MUI\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst aspectRatio = 4 / 3;\nconst thresholdPercentFace = 0.3;\nconst thresholdFaceScore = 0.7;\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nconst WebcamCapture = ({ setImageSrc, setOnPlay, onPlay }) => {\n    let camHeight = useWindowDimensions().height\n    let camWidth = useWindowDimensions().width\n    if (camHeight > camWidth) {\n        camHeight = Math.round(camWidth * aspectRatio)\n    } else {\n        camHeight = Math.round(camHeight * 0.9)\n        camWidth = Math.round(camHeight / aspectRatio)\n    }\n    const videoConstraints = {\n        height: camHeight,\n        width: camWidth,\n        facingMode: \"user\"\n    };\n\n    // useEffect( () =>\n    //     {\n    //         console.log(videoConstraints.height)\n    //         console.log(videoConstraints.width)\n    //     }, [videoConstraints.height, videoConstraints.width]\n    // )\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            console.log(imageSrc)\n            setImageSrc(imageSrc)\n        }, [webcamRef, setImageSrc]\n    );asdas\n\n    const [initialising, setInitialising] = useState(false)\n    useEffect(() => {\n        const loadModels = async () => {\n            const MODEL_URI = process.env.PUBLIC_URL + '/models';\n            setInitialising(true)\n            Promise.all([\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URI),\n            ]).then(() => { console.log(\"models imported\") });\n        }\n        loadModels();\n    }, [])\n\n\n\n    const [faceOK, setFaceOK] = useState(null)\n    const handleVideoOnPlay = () => {\n        setInterval(async () => {\n            if (initialising) {\n                setInitialising(false)\n            }\n            let detections = []\n            if (webcamRef.current !== null)\n                detections = await faceapi.detectAllFaces(webcamRef.current.video, new faceapi.TinyFaceDetectorOptions());\n            if (detections.length > 1) {\n                // Multiple faces\n                setFaceOK(\"Multiple faces detected\")\n            }\n            else if (detections[0] !== undefined) {\n                // One face\n                const boxArea = Math.round(detections[0].box.height) * Math.round(detections[0].box.width)\n                const ImageArea = detections[0].imageWidth * detections[0].imageHeight\n                const percentFace = boxArea / ImageArea\n\n                if (percentFace < thresholdPercentFace) {\n                    // Not close enough\n                    setFaceOK(\"Come closer\")\n                } else if (detections[0].score < thresholdFaceScore) {\n                    // detected face score is low\n                    setFaceOK(\"Blurry or Not enough lighting\")\n                } else {\n                    // all conditions satisfied\n                    setFaceOK(\"OK\")\n                }\n            }\n            else {\n                // No face\n                setFaceOK(\"no face detected\")\n            }\n        }, 500)\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" alignItems=\"center\" marginTop={1} spacing={1}>\n                <Grid item>\n                    <Typography variant=\"h5\" component=\"div\" textAlign=\"center\">\n                        {initialising ? \"Starting Up...\" : faceOK}\n                    </Typography>\n                    <Webcam\n                        id=\"webcam\"\n                        audio={false}\n                        height={videoConstraints.height - 40}\n                        width={videoConstraints.width}\n                        ref={webcamRef}\n                        screenshotFormat=\"image/jpeg\"\n                        videoConstraints={videoConstraints}\n                        onUserMedia={handleVideoOnPlay}\n                    />\n                </Grid>\n                <Grid item>\n                    <Button\n                        onClick={capture}\n                        variant=\"contained\"\n                        disabled={initialising || faceOK !== \"OK\"}\n                    >\n                        Capture Photo\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n\n    );\n};\n\nexport default WebcamCapture"]},"metadata":{},"sourceType":"module"}