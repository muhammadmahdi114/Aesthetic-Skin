{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\Aesthetic-Skin\\\\AI-Rec\\\\frontend\\\\src\\\\views\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom'; // MUI\n\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select'; // controllers\n\nimport { putForm } from '../controllers/actions';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst skinToneValues = [1, 2, 3, 4, 5, 6];\nconst skinToneColors = [\"rgb(249, 245, 236)\", \"rgb(250, 245, 234)\", \"rgb(240, 227, 171)\", \"rgb(206, 172, 104)\", \"rgb(105, 59, 41)\", \"rgb(33, 28, 40)\"];\nlet data = {\n  tone: 5,\n  type: \"Oily\",\n  acne: \"Moderate\"\n};\nconst skinTypes = [\"All\", \"Oily\", \"Normal\", \"Dry\"];\nconst acnes = ['Low', 'Moderate', 'Severe'];\nconst otherConcerns = ['sensitive', 'fine lines', 'wrinkles', 'redness', 'pore', 'pigmentation', 'blackheads', 'whiteheads', 'blemishes', 'dark circles', 'eye bags', 'dark spots'];\n\nconst Form = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n\n  if (state !== null) {\n    data = state.data;\n    console.log(data);\n  }\n\n  console.log(\"After the condtional : \", data);\n  const {\n    type,\n    tone,\n    acne\n  } = data;\n  console.log(\"Prefill : \", type, tone, acne);\n  const [currType, setCurrType] = useState(type);\n  const [currTone, setCurrTone] = useState(parseInt(tone));\n  const [currAcne, setAcne] = useState(acne);\n  const [features, setFeatures] = useState({\n    \"normal\": false,\n    \"dry\": false,\n    \"oily\": false,\n    \"combination\": false,\n    \"acne\": false,\n    \"sensitive\": false,\n    \"fine lines\": false,\n    \"wrinkles\": false,\n    \"redness\": false,\n    \"dull\": false,\n    \"pore\": false,\n    \"pigmentation\": false,\n    \"blackheads\": false,\n    \"whiteheads\": false,\n    \"blemishes\": false,\n    \"dark circles\": false,\n    \"eye bags\": false,\n    \"dark spots\": false\n  });\n\n  const handleChange = event => {\n    setFeatures({ ...features,\n      [event.target.name]: event.target.checked\n    });\n    console.log(features);\n  };\n\n  const handleTone = e => {\n    setCurrTone(e.target.value);\n  };\n\n  const handleType = e => {\n    setCurrType(e.target.value);\n  };\n\n  const handleAcne = e => {\n    setAcne(e.target.value);\n  };\n\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    if (currType === 'All') {\n      features['normal'] = true;\n      features['dry'] = true;\n      features['oily'] = true;\n      features['combination'] = true;\n    } else {\n      features[currType.toLowerCase()] = true;\n    }\n\n    if (currAcne != \"Low\") {\n      features['acne'] = true;\n    }\n\n    for (const [key, value] of Object.entries(features)) {\n      if (value === true) {\n        features[key] = 1;\n      } else {\n        features[key] = 0;\n      }\n    }\n\n    console.log({\n      \"features\": features,\n      \"type\": currType,\n      \"tone\": currTone\n    });\n    putForm(features, currType, currTone, navigate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      sx: {\n        marginTop: \"2vh\"\n      },\n      alignitems: \"center\",\n      width: \"inherit\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        textAlign: \"center\",\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        sx: {\n          marginTop: \"3vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 9,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Tone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: currTone,\n              label: \"Age\",\n              onChange: handleTone,\n              fullWidth: true,\n              defaultValue: tone,\n              children: skinToneValues.map(value => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: value,\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"3rem\",\n                width: \"3rem\",\n                backgroundColor: skinToneColors[tone - 1],\n                margin: \"0 auto\",\n                justifySelf: \"center\",\n                borderRadius: \"10%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          marginTop: \"2vh\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            name: \"row-radio-buttons-group\",\n            defaultValue: type,\n            onChange: handleType,\n            value: currType,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: skinTypes.map(type => {\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: type,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 58\n                    }, this),\n                    label: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          marginTop: \"2vh\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Acne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            name: \"row-radio-buttons-group\",\n            onChange: handleAcne,\n            defaultValue: acne,\n            value: currAcne,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: acnes.map(ac => {\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: ac,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 58\n                    }, this),\n                    label: ac\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          marginTop: \"2vh\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Specify other Skin concerns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: otherConcerns.map(concern => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: features[concern],\n                    onChange: handleChange,\n                    name: concern\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 68\n                  }, this),\n                  value: concern,\n                  label: concern.charAt(0).toUpperCase() + concern.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          marginTop: \"2vh\",\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            variant: \"contained\",\n            fullWidth: true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"GzHmMBfXVFkmEbYx2mHoWrokWPQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["E:/GitHub/Aesthetic-Skin/AI-Rec/frontend/src/views/Form.jsx"],"names":["React","useState","useNavigate","Container","Grid","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Checkbox","Button","Typography","InputLabel","MenuItem","Select","putForm","useLocation","skinToneValues","skinToneColors","data","tone","type","acne","skinTypes","acnes","otherConcerns","Form","state","console","log","currType","setCurrType","currTone","setCurrTone","parseInt","currAcne","setAcne","features","setFeatures","handleChange","event","target","name","checked","handleTone","e","value","handleType","handleAcne","navigate","handleSubmit","toLowerCase","key","Object","entries","marginTop","map","height","width","backgroundColor","margin","justifySelf","borderRadius","ac","concern","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\nimport {useNavigate} from 'react-router-dom';\n\n// MUI\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\n// controllers\nimport { putForm } from '../controllers/actions'\nimport { useLocation } from 'react-router';\n\nconst skinToneValues = [1, 2, 3, 4, 5, 6]\nconst skinToneColors = [\"rgb(249, 245, 236)\",\n    \"rgb(250, 245, 234)\",\n    \"rgb(240, 227, 171)\",\n    \"rgb(206, 172, 104)\",\n    \"rgb(105, 59, 41)\",\n    \"rgb(33, 28, 40)\",\n]\nlet data = {\n    tone: 5,\n    type: \"Oily\",\n    acne: \"Moderate\"\n}\nconst skinTypes = [\"All\", \"Oily\", \"Normal\", \"Dry\"]\nconst acnes = ['Low', 'Moderate', 'Severe']\nconst otherConcerns = ['sensitive', 'fine lines', 'wrinkles', 'redness', 'pore', 'pigmentation', 'blackheads', 'whiteheads', 'blemishes', 'dark circles', 'eye bags', 'dark spots']\n\nconst Form = () => {\n    \n    const {state} = useLocation();\n    if(state !== null) {\n        data = state.data; \n        console.log(data)\n    }\n    console.log(\"After the condtional : \", data)\n    const {type, tone, acne} = data;\n    console.log(\"Prefill : \", type, tone, acne)\n\n    const [currType, setCurrType] = useState(type)\n    const [currTone, setCurrTone] = useState(parseInt(tone))\n    const [currAcne, setAcne] = useState(acne)\n    const [features, setFeatures] = useState({\n        \"normal\": false, \"dry\": false, \"oily\": false, \"combination\": false,\n        \"acne\": false, \"sensitive\": false, \"fine lines\": false, \"wrinkles\": false,\n        \"redness\": false, \"dull\": false, \"pore\": false, \"pigmentation\": false,\n        \"blackheads\": false, \"whiteheads\": false, \"blemishes\": false, \"dark circles\": false,\n        \"eye bags\": false, \"dark spots\": false\n    });\n    const handleChange = (event) => {\n        setFeatures({\n            ...features,\n            [event.target.name]: event.target.checked,\n        });\n        console.log(features)\n    };\n    const handleTone = (e) => {\n        setCurrTone(e.target.value)\n    }\n\n    const handleType = (e) => {\n        setCurrType(e.target.value)\n    }\n\n    const handleAcne = (e) => {\n        setAcne(e.target.value)\n    }\n    const navigate = useNavigate()\n    const handleSubmit = () => {\n        if (currType === 'All') {\n            features['normal'] = true;\n            features['dry'] = true;\n            features['oily'] = true;\n            features['combination'] = true;\n\n        }\n        else {\n            features[currType.toLowerCase()] = true;\n        }\n        if (currAcne != \"Low\") {\n            features['acne'] = true;\n        }\n        for (const [key, value] of Object.entries(features)) {\n            if (value === true) {\n                features[key] = 1;\n            }\n            else {\n                features[key] = 0;\n            }\n        }\n        console.log({\"features\": features, \"type\":currType, \"tone\":currTone})\n        putForm(features, currType, currTone, navigate)\n    }\n\n    return (\n        <>\n            <Container maxWidth=\"xs\" sx={{ marginTop: \"2vh\" }} alignitems=\"center\" width=\"inherit\">\n                <Typography variant=\"h5\" component=\"div\" textAlign=\"center\">\n                    Results\n                </Typography>\n                {/* \n            <FormControl fullWidth>\n            </FormControl> */}\n\n                <FormControl component=\"fieldset\" sx={{ marginTop: \"3vh\" }}>\n                    <Grid container>\n                        <Grid item xs={9}>\n                            <InputLabel id=\"demo-simple-select-label\">Tone</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={currTone}\n                                label=\"Age\"\n                                onChange={handleTone}\n                                fullWidth\n                                defaultValue={tone}>\n                                {skinToneValues.map((value) => {\n                                    return (<MenuItem value={value}>{value}</MenuItem>)\n                                })}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <div\n                                style={{\n                                    height: \"3rem\",\n                                    width: \"3rem\",\n                                    backgroundColor: skinToneColors[tone-1],\n                                    margin: \"0 auto\",\n                                    justifySelf: \"center\",\n                                    borderRadius: \"10%\",\n                                }}></div>\n                        </Grid>\n                    </Grid>\n                    <Grid marginTop=\"2vh\">\n                        <FormLabel component=\"legend\">Type</FormLabel>\n                        <RadioGroup\n                            row\n                            name=\"row-radio-buttons-group\"\n                            defaultValue={type}\n                            onChange={handleType}\n                            value={currType}>\n                            <Grid container>\n                                {skinTypes.map((type) => {\n                                    return (\n                                        <Grid item xs={6}>\n                                            <FormControlLabel\n                                                value={type}\n                                                control={<Radio />}\n                                                label={type} />\n                                        </Grid>)\n                                })}\n                            </Grid>\n                        </RadioGroup>\n                    </Grid>\n\n                    <Grid marginTop=\"2vh\">\n                        <FormLabel component=\"legend\">Acne</FormLabel>\n                        <RadioGroup\n                            row\n                            name=\"row-radio-buttons-group\"\n                            onChange={handleAcne}\n                            defaultValue={acne}\n                            value={currAcne}>\n\n                            <Grid container>\n                                {acnes.map((ac) => {\n                                    return (\n                                        <Grid item >\n                                            <FormControlLabel\n                                                value={ac}\n                                                control={<Radio />}\n                                                label={ac} />\n                                        </Grid>)\n                                })}\n                            </Grid>\n                        </RadioGroup>\n                    </Grid>\n\n                    <Grid marginTop=\"2vh\">\n                        {/* <Typography variant=\"h6\" component=\"div\" textAlign=\"center\">\n                    Specify other skin concerns\n            </Typography> */}\n                        <FormLabel component=\"legend\">Specify other Skin concerns</FormLabel>\n                        <Grid container>\n                            {otherConcerns.map((concern) => {\n                                return (\n                                    <Grid item xs={6}>\n                                        <FormControlLabel control={<Checkbox checked={features[concern]} onChange={handleChange} name={concern} />}\n                                            value={concern}\n                                            label={concern.charAt(0).toUpperCase() + concern.slice(1)} />\n                                    </Grid>)\n                            })}\n                        </Grid>\n                    </Grid>\n\n                    <Grid marginTop=\"2vh\" item xs={12}>\n                        <Button\n                            onClick={handleSubmit}\n                            variant=\"contained\"\n                            fullWidth>\n                            Submit\n                        </Button>\n                    </Grid>\n                </FormControl>\n            </Container>\n        </>\n    )\n}\n\n\n\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}